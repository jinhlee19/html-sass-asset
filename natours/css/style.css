@charset "UTF-8";
*,
*::after **::before {
  margin: 0;
  padding: 0;
  /* !!! box-sizing의 기본을 상속으로 둠으로써 body에 있는 box-sizing으로 하위 요소 및 자식에게 물려주도록 한다. 
	(box-sizing 기본값 자체가 inherit속성을 갖도록 만들어줌) */
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  /* no borders or paddings added - sizing as it is */
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* translateX(좌우 이동) : (-)는 좌, (+)는 우에서 나타남. -> 기준점 반영) */
    transform: translateX(-10rem); }
  80% {
    /* 역시나 기준점을 사용 (어디까지 움직일지에 대한 위치 기준 px. ) X의 기준을 사용해서  */
    transform: translateX(1rem);
    /* transform: rotate(17deg); */ }
  100% {
    opacity: 1;
    /* 도착점이므로 0 */
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  /* overall font-family to inherit - better practice than universal selector */
  font-family: "Lato", sans-serif;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* 애니메이션 마지막에 흔들리는 현상 방지 -> backface-visibility: hidden; */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
    /* 하단에 작성한 애니메이션을 불러오려면 html이 아닌 이곳! 
        이름, 지연, 재생시간 등을 설정 참고 */
    animation-name: moveInLeft;
    animation-duration: 2s;
    /* animation-delay: 2s; */
    /* 기타 예시설정들 */
    /*시작은 느리고 이후 빠르게*/
    /* animation-timing-function: ease-in;     */
    animation-timing-function: ease-out;
    /* 애니메이션 반복 */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    letter-spacing: 1.7rem;
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    animation: moveInRight 2s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.25); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom {
  margin-bottom: 8rem; }

.u-margin-bottom-sm {
  margin-bottom: 1.5rem; }

.u-margin-bottom-md {
  margin-bottom: 4rem; }

.u-margin-bottom-lg {
  margin-bottom: 8rem; }

.section-about {
  background-color: #eee;
  padding: 25rem 0;
  margin-top: -20vh; }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }

.row {
  display: flex; }
  .row [class^="col-"]:not(:last-child) {
    margin-right: 6rem; }
  .row div {
    flex: 1; }

.btn:link, .btn:visited {
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* inline-block으로 패딩 마진이 적용되는 박스모델로 만들어주기 */
  display: inline-block;
  border-radius: 10rem;
  /* animation을 한곳에 때려넣는 transition으로 대체 - btn:hover, active 상태의 애니메이션 적용*/
  transition: all 0.2s;
  position: relative;
  animation: moveInBottom 2s; }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.5) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn::after {
  /* pseudo - 항상 content를 명시 */
  content: "";
  display: inline-block;
  /* - treated as child of btn  */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn--animated {
  animation: moveInBottom 1s ease-out 0.75s;
  /* delay로 인한 처리 animation fill mode - backwards 라는 옵션이 딜레이 상태 시간동안 0%의 keyframe 상태로 유지시켜줌. */
  animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  padding: 3px;
  transition: all .6s; }

.btn-text:hover {
  background-color: #7ed56f;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      left: 20%;
      top: 2rem; }
    .composition__photo--p3 {
      left: 0;
      top: 10rem; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  /* 이미지를 상단 기준으로 고정 - 뷰포트 하단의 이미지만 변경 또는 Crop됨  */
  background-position: top;
  /* clip-path: 각 x,y 포인트를 시계방향으로 */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* position으로 logo-box의 기준을 준다. */
  position: relative; }
  .header__logo-box {
    /* header의 relative를 레퍼런스로 하는 기준점으로 top과 left의 40px 주기 */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    /* height만 잡아도 width 잡힘. 필요한 값만 올려줘도 사이징 ㅇㅋ */
    height: 3.5rem; }
  .header__logo-box:hover .logo {
    animation: moveInRight 1s ease-out; }
  .header__text-box {
    position: absolute;
    /* sinking 때문에 디자인적으로 살짝 뜨게 해줘야해서 40% - 안정감 */
    top: 40%;
    left: 50%;
    /* background-color: red; */
    transform: translate(-50%, -50%);
    text-align: center; }
